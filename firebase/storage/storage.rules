rules_version = '2';
function getIncomingData() {
  return request.resource;
}
function getFirestoreUploadIntentDocData(id) {
  let doc1 = firestore.get(/databases/(default)/documents/uploadIntentDocs/$(id));
  return doc1 == null ? null : doc1.data;
}
function getIncomingAuth() {
  return request.auth;
}

service firebase.storage {
  match /b/{bucket}/o {
    match /uploadFiles/{id} {
      function canCreateUploadFile(id){
        let firestoreFileData = getFirestoreUploadIntentDocData(id);
        let auth = getIncomingAuth();

        return firestoreFileData != null
          && firestoreFileData.uid == auth.uid
          && request.resource.size < 50*1024*1024
      }
      
      // function canGetFile(id){
      //   let firestoreFileData = getFirestoreUploadIntentDocData(id);
      //   let auth = getIncomingAuth();

      //   return firestoreFileData.id != null
      //     && firestoreFileData.uid == auth.uid
      // }
      allow create: if canCreateUploadFile(id);
      // allow get: if canGetFile(id);
      allow update: if false;
      allow list: if false;
      allow delete: if false;
    }
  }
}
